{
  "tasks": [
    {
      "task_number": 177,
      "prompt_title": "Constrained Subsequence Sum",
      "prompt_description": "Given an integer array nums and an integer k, return the maximum sum of a non-empty subsequence of that array such that for every two consecutive integers in the subsequence, nums[i] and nums[j], where i < j, the condition j - i <= k is satisfied.\n\nA subsequence of an array is obtained by deleting some number of elements (can be zero) from the array, leaving the remaining elements in their original order.\n\n \n\nExample 1:\n\nInput: nums = [10,2,-10,5,20], k = 2\nOutput: 37\nExplanation: The subsequence is [10, 2, 5, 20].\nExample 2:\n\nInput: nums = [-1,-2,-3], k = 1\nOutput: -1\nExplanation: The subsequence must be non-empty, so we choose the largest number.\nExample 3:\n\nInput: nums = [10,-2,-10,-5,20], k = 2\nOutput: 23\nExplanation: The subsequence is [10, -2, -5, 20].\n \n\nConstraints:\n\n1 <= k <= nums.length <= 10^5\n-10^4 <= nums[i] <= 10^4",
      "hints": {
        "java": "",
        "c": "",
        "cpp": "",
        "python": ""
      },
      "solutions": {
        "generated_by": "",
        "java": "",
        "c": "",
        "cpp": "",
        "python": ""
      },
      "source": "https://leetcode.com/problems/constrained-subsequence-sum/description/",
      "tags": ["Array", "Sliding Window", "Monotonic Queue"],
      "comments": ""
    }
  ]
}